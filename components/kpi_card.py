# components/kpi_card.py
# -*- coding: utf-8 -*-
import streamlit as st
import pandas as pd
from utils.formatters import fmt_baht

def _find_prev_month(months: list, current: str):
    """‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô df1)"""
    try:
        idx = months.index(current)
        return months[idx-1] if idx > 0 else None
    except ValueError:
        return None

def _growth_rate(cur: float, prev: float) -> float:
    if prev is None or prev == 0:
        return 0.0
    return ((cur - prev) / prev) * 100.0

def render_kpis(df1: pd.DataFrame, df2: pd.DataFrame, df3: pd.DataFrame, selected_month: str):
    """
    ‡πÅ‡∏™‡∏î‡∏á KPI Cards 4 ‡πÉ‡∏ö‡∏ï‡∏≤‡∏°‡∏ä‡∏∏‡∏î (1)(2)(3)(6)(7) ‡πÇ‡∏î‡∏¢‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà 4 ‡πÉ‡∏ö‡πÅ‡∏£‡∏Å:
      1) ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
      2) ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
      3) ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå (‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®+‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå / ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á)
      6) ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï MoM (‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®)
      7) ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î MoM ‚Äî ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏Ñ‡∏õ‡∏ä‡∏±‡∏ô‡πÉ‡∏ô‡πÉ‡∏ö‡∏ó‡∏µ‡πà 4 ‡∏£‡πà‡∏ß‡∏°
    """
    months = [c for c in df1.columns]  # ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    prev_month = _find_prev_month(months, selected_month)

    # ---- (1) ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
    total_cur = float(df1[selected_month].sum())
    total_prev = float(df1[prev_month].sum()) if prev_month else None
    mom = _growth_rate(total_cur, total_prev)

    # ---- (2) ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    top_province = df1[selected_month].idxmax()
    top_province_sales = float(df1[selected_month].max())

    # ---- (3) ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå (‡∏£‡∏ß‡∏°‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ô/‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®)
    # ‡∏à‡∏≤‡∏Å df2 (index ‡πÄ‡∏õ‡πá‡∏ô '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô' ‡πÄ‡∏ä‡πà‡∏ô '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2567')
    month_key = selected_month.split(' ')[0]
    idx_match = next((idx for idx in df2.index if str(idx).startswith(month_key)), None)
    online_ratio = 0.0
    if idx_match:
        row = df2.loc[idx_match]
        online = float(row.get('‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®(‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)', 0.0)) + float(row.get('‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®(‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)', 0.0))
        total_chan = float(row.sum()) if row.sum() else 1.0
        online_ratio = (online / total_chan) * 100.0

    # ---- (7) ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î MoM
    fastest_name, fastest_rate = "-", 0.0
    if prev_month:
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì growth rate ‡∏ï‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
        prev_series = df1[prev_month].replace(0, pd.NA)
        growth = ((df1[selected_month] - df1[prev_month]) / prev_series) * 100.0
        growth = growth.dropna()
        if not growth.empty:
            fastest_name = growth.idxmax()
            fastest_rate = float(growth.max())

    # ===== Render =====
    st.markdown('<div class="kpi-grid">', unsafe_allow_html=True)

    # Card 1 ‚Äî ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
    st.markdown(f"""
      <div class="kpi-card">
        <div class="kpi-title"><span class="kpi-ic">üõí</span>‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</div>
        <div class="kpi-value">‡∏ø{total_cur:,.0f}</div>
        <div class="kpi-sub">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô {selected_month}</div>
      </div>
    """, unsafe_allow_html=True)

    # Card 2 ‚Äî ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    st.markdown(f"""
      <div class="kpi-card">
        <div class="kpi-title"><span class="kpi-ic">üèÜ</span>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</div>
        <div class="kpi-value">{top_province}</div>
        <div class="kpi-sub">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ‡∏ø{top_province_sales:,.0f}</div>
      </div>
    """, unsafe_allow_html=True)

    # Card 3 ‚Äî ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
    st.markdown(f"""
      <div class="kpi-card">
        <div class="kpi-title"><span class="kpi-ic">üõçÔ∏è</span>‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</div>
        <div class="kpi-value">{online_ratio:,.2f}%</div>
        <div class="kpi-sub">‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®+‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)</div>
      </div>
    """, unsafe_allow_html=True)

    # Card 4 ‚Äî ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï MoM + ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î
    pill_class = "kpi-pill" if mom >= 0 else "kpi-pill neg"
    arrow = "‚ñ≤" if mom >= 0 else "‚ñº"
    st.markdown(f"""
      <div class="kpi-card">
        <div class="{pill_class}">{arrow} {mom:,.2f}%</div>
        <div class="kpi-title"><span class="kpi-ic">üìà</span>‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï MoM</div>
        <div class="kpi-value">{mom:,.2f}%</div>
        <div class="kpi-sub">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤</div>
        <div class="kpi-sub" style="margin-top:8px;"><b>‚ö° ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î:</b> {fastest_name} ({fastest_rate:,.2f}%)</div>
      </div>
    """, unsafe_allow_html=True)

    st.markdown('</div>', unsafe_allow_html=True)
