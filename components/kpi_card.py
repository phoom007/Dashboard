# components/kpi_card.py
# -*- coding: utf-8 -*-
import streamlit as st
import numpy as np
import pandas as pd


def _find_month_index_like(index, month_text: str):
    """‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ index ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô (‡πÄ‡∏ä‡πà‡∏ô '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô')"""
    for i in index:
        if str(i).startswith(month_text):
            return i
    return None


def render_kpis(df1: pd.DataFrame, df2: pd.DataFrame, df3: pd.DataFrame, selected_month: str) -> None:
    """
    ‡πÅ‡∏™‡∏î‡∏á KPI 4 ‡πÉ‡∏ö‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (HTML + CSS)
    - ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
    - ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    - ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå (‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®+‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå / ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á)
    - ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï MoM + ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î
    """

    # ---------- KPI 1: ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® ----------
    total_sales = float(df1[selected_month].sum())

    # ---------- KPI 2: ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ----------
    top_province = str(df1[selected_month].idxmax())
    top_province_sales = float(df1[selected_month].max())

    # ---------- KPI 3: ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ----------
    # ‡∏´‡∏≤‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á df2 ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (index ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2567')
    month_key = selected_month.split()[0]  # '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô'
    idx_match = _find_month_index_like(df2.index, month_key)

    online_share = 0.0
    if idx_match is not None:
        total_channels = float(df2.loc[idx_match].sum())
        online_sum = 0.0
        for col in df2.columns:
            if "‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå" in col:
                online_sum += float(df2.loc[idx_match, col])
        if total_channels > 0:
            online_share = (online_sum / total_channels) * 100.0

    # ---------- KPI 4: ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï MoM (+ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î) ----------
    # ‡∏´‡∏≤ column ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≤‡∏Å df1
    month_cols = [c for c in df1.columns if ("2566" in c or "2567" in c)]
    if not month_cols:
        month_cols = list(df1.columns)

    try:
        cur_idx = month_cols.index(selected_month)
    except ValueError:
        cur_idx = len(month_cols) - 1

    prev_col = month_cols[cur_idx - 1] if cur_idx - 1 >= 0 else None

    mom_pct = None
    fastest_name = "-"
    fastest_val = None

    if prev_col:
        total_prev = float(df1[prev_col].sum())
        if total_prev > 0:
            mom_pct = (total_sales - total_prev) / total_prev * 100.0

        # ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î = (cur - prev)/prev ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
        prev_series = df1[prev_col].replace(0, np.nan)
        growth = (df1[selected_month] - df1[prev_col]) / prev_series * 100.0
        growth = growth.replace([np.inf, -np.inf], np.nan).dropna()
        if not growth.empty:
            fastest_name = str(growth.idxmax())
            fastest_val = float(growth.max())

    # ‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡πà‡∏≤ MoM ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå (‡∏ö‡∏ß‡∏Å/‡∏•‡∏ö)
    pill_html = ""
    if mom_pct is not None:
        if mom_pct >= 0:
            pill_html = f'<div class="kpi-pill pos">‚ñ≤ {mom_pct:.2f}%</div>'
        else:
            pill_html = f'<div class="kpi-pill neg">‚ñº {mom_pct:.2f}%</div>'

    # ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ----------
    html = f"""
<div class="kpi-row">

  <!-- KPI 1 -->
  <div class="kpi-card kpi-compact kpi--purple">
    <div class="kpi-top">
      <div class="kpi-icon">üõí</div>
      <div>
        <div class="kpi-value">‡∏ø{total_sales:,.0f}</div>
        <div class="kpi-title">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</div>
      </div>
    </div>
    <div class="kpi-sub">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô {selected_month}</div>
  </div>

  <!-- KPI 2 -->
  <div class="kpi-card kpi-compact kpi--blue">
    <div class="kpi-top">
      <div class="kpi-icon">üèÜ</div>
      <div>
        <div class="kpi-value">{top_province}</div>
        <div class="kpi-title">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</div>
      </div>
    </div>
    <div class="kpi-sub">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ‡∏ø{top_province_sales:,.0f}</div>
  </div>

  <!-- KPI 3 -->
  <div class="kpi-card kpi-compact kpi--green">
    <div class="kpi-top">
      <div class="kpi-icon">üõçÔ∏è</div>
      <div>
        <div class="kpi-value">{online_share:.2f}%</div>
        <div class="kpi-title">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</div>
      </div>
    </div>
    <div class="kpi-sub">‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®+‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)</div>
  </div>

  <!-- KPI 4 -->
  <div class="kpi-card kpi-compact kpi--peach">
    {pill_html}
    <div class="kpi-top">
      <div class="kpi-icon">üìà</div>
      <div>
        <div class="kpi-value">{(mom_pct if mom_pct is not None else 0):.2f}%</div>
        <div class="kpi-title">‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï MoM</div>
      </div>
    </div>
    <div class="kpi-sub">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î: {fastest_name}{f" ({fastest_val:.2f}%)" if fastest_val is not None else ""}</div>
  </div>

</div>
"""
    # ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå HTML ‡∏à‡∏£‡∏¥‡∏á ‡πÜ (‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Streamlit escape)
    st.markdown(html, unsafe_allow_html=True)
