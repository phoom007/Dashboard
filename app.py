# -*- coding: utf-8 -*-
# OTOP Sales Dashboard ‚Äî ‡∏ä‡∏∏‡∏î B (‡πÄ‡∏ô‡πâ‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå/‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï)
import streamlit as st
from utils.theme import set_base_page_config, inject_global_css, get_plotly_template
from utils.data import load_all_data, load_geojson, month_cols, PROVINCE_NAME_MAP
from components.topbar import render_topbar
from components.sidebar import render_sidebar
from components.kpi_card import render_kpis
from components.charts import render_main_row_charts, render_transactions_and_sources
from components.mapbox import render_thailand_map

# 0) Page setup
set_base_page_config()
if "theme_mode" not in st.session_state:
    st.session_state.theme_mode = "Light"

inject_global_css(st.session_state.theme_mode)

# 1) Topbar (‡∏™‡∏ß‡∏¢‚Äî‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÇ‡∏ä‡∏ß‡πå, Theme toggle ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á)
render_topbar()

# 2) Load data
df1, df2, df3, df1_melted, national_avg = load_all_data()
th_geo = load_geojson()

# 3) Sidebar (Filters & Nav)
sidebar_state = render_sidebar(df1, df2, df3)
selected_month = sidebar_state["selected_month"]
selected_province = sidebar_state["selected_province"]
channel_filter = sidebar_state["channel_filter"]
product_filter = sidebar_state["product_filter"]

# 4) Title + data source refs
st.title("üõçÔ∏è Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ OTOP (‡∏ä‡∏∏‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï)")
st.caption(f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô **{selected_month}** ‚Ä¢ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≤‡∏ó (‡∏ø) ‚Ä¢ ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á: "
           "otop_r04, otop_r05, otop_r06 ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô CDD (‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤)")

# 5) KPI (‡∏ä‡∏∏‡∏î B): (1) Total Sales, (2) Top Province, (3) Online Share %, (6) Total Sales MoM %, (7) Fastest Growing Province (MoM)
render_kpis(df1, df2, df3, selected_month)

st.markdown("")

# 6) ‡∏Å‡∏£‡∏≤‡∏ü‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å (‡∏ã‡πâ‡∏≤‡∏¢: ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ, ‡∏Ç‡∏ß‡∏≤: ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏™‡∏•‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏ó‡πà‡∏á‡πÑ‡∏î‡πâ)
render_main_row_charts(df1, df2, selected_month, plotly_template=get_plotly_template())

st.markdown("---")

# 7) ‡πÅ‡∏ó‡πá‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà/‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
tab1, tab2 = st.tabs(["üó∫Ô∏è ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", "üîé ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å"])
with tab1:
    render_thailand_map(df1, df1_melted, th_geo, selected_month, theme_mode=st.session_state.theme_mode)
with tab2:
    render_transactions_and_sources(df1, df2, df3, selected_month, selected_province,
                                    channel_filter, product_filter, national_avg,
                                    plotly_template=get_plotly_template())

# 8) ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ï‡∏≤‡∏°‡∏™‡πÄ‡∏õ‡∏Å‡∏Ç‡πâ‡∏≠ 9)
st.markdown("---")
st.markdown(
    "‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÉ‡∏ô‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î:  "
    "[otop_r04](https://logi.cdd.go.th/otop/cdd_report/otop_r04.php) ‚Ä¢ "
    "[otop_r05](https://logi.cdd.go.th/otop/cdd_report/otop_r05.php) ‚Ä¢ "
    "[otop_r06](https://logi.cdd.go.th/otop/cdd_report/otop_r06.php)"
)
