# app.py
# -*- coding: utf-8 -*-
import streamlit as st
import traceback

# ---- Local modules ----
from utils.theme import set_base_page_config, inject_global_css, get_plotly_template
from utils.data import load_all_data, load_geojson
from components.sidebar import render_sidebar
from components.kpi_card import render_kpis
from components.charts import (
    render_time_kind_controls,
    render_main_row_charts,
    render_revenue_sources,
    render_cdd_sources_embeds,
)
from components.mapbox import render_thailand_map


def main():
    # 0) Base theme & CSS
    set_base_page_config()
    inject_global_css()

    # 1) Load data
    #    (utils/data.py ‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏ô 6 ‡∏Ñ‡πà‡∏≤: df1, df2, df3, df1_melted, national_avg, month_cols)
    df1, df2, df3, df1_melted, national_avg, month_cols = load_all_data()
    th_geo = load_geojson()

    # 2) Sidebar (‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ã‡πâ‡∏≤‡∏¢ / Night Mode ‡∏Ç‡∏ß‡∏≤ + ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á)
    sidebar_state = render_sidebar(df1, df2, df3)
    selected_month = sidebar_state["selected_month"]
    selected_province = sidebar_state["selected_province"]
    channel_filter = sidebar_state["channel_filter"]
    product_filter = sidebar_state["product_filter"]

    # 3) Title + Caption (‡∏ï‡∏≤‡∏°‡∏™‡πÄ‡∏õ‡∏Å)
    st.title("üõçÔ∏è Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ OTOP (‡∏ä‡∏∏‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï)")
    st.divider()
    st.caption(
        f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô **{selected_month}** ‚Ä¢ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≤‡∏ó (‡∏ø) ‚Ä¢ "
        "‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: otop_r04, otop_r05, otop_r06 (‡∏î‡∏π‡∏ó‡πâ‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤)"
    )

    # 4) KPI (‡∏™‡∏µ‡πÄ‡∏î‡∏¥‡∏°/‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°/1 ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô Desktop, ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ 2x2)
    render_kpis(df1, df2, df3, selected_month)

    # 5) Global controls (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô) + Main charts (‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤)
    render_time_kind_controls(prefix="main")
    render_main_row_charts(
        df1, df2, selected_month,
        plotly_template=get_plotly_template(),
        key_prefix="main",
    )

    st.markdown("---")

    # 6) Tabs ‚Äî ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏°‡∏µ Controls + Revenue Sources + CDD Embeds
    tab1, tab2 = st.tabs(["üó∫Ô∏è ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", "üîé ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å"])

    with tab1:
        # Controls (‡∏°‡∏µ auto-unique key ‡πÅ‡∏•‡πâ‡∏ß, prefix ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ó‡πá‡∏ö)
        render_time_kind_controls(prefix="tab1")

        # Thailand Map (Mapbox ‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏•‡∏≠‡∏î)
        render_thailand_map(
            df1=df1,
            df1_melted=df1_melted,
            th_geojson=th_geo,
            selected_month=selected_month,
            key_prefix="tab1",
        )

        st.markdown("---")

        # Revenue Sources (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
        render_revenue_sources(
            df2=df2,
            selected_month=selected_month,
            plotly_template=get_plotly_template(),
            key_prefix="tab1",
        )

        st.markdown("---")

        # CDD embeds (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤ otop_r06/05/04)
        render_cdd_sources_embeds(key_prefix="tab1")

    with tab2:
        render_time_kind_controls(prefix="tab2")

        # (‡πÄ‡∏ß‡πâ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        # ‡πÅ‡∏™‡∏î‡∏á Revenue Sources + CDD ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
        st.markdown("---")
        render_revenue_sources(
            df2=df2,
            selected_month=selected_month,
            plotly_template=get_plotly_template(),
            key_prefix="tab2",
        )

        st.markdown("---")
        render_cdd_sources_embeds(key_prefix="tab2")

    # 7) Footer: Data sources
    st.markdown("---")
    st.markdown(
        "‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÉ‡∏ô‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î:  "
        "[otop_r04](https://logi.cdd.go.th/otop/cdd_report/otop_r04.php) ‚Ä¢ "
        "[otop_r05](https://logi.cdd.go.th/otop/cdd_report/otop_r05.php) ‚Ä¢ "
        "[otop_r06](https://logi.cdd.go.th/otop/cdd_report/otop_r06.php)"
    )


if __name__ == "__main__":
    try:
        main()
    except Exception:
        # Fallback page config (‡∏Å‡∏£‡∏ì‡∏µ error ‡∏Å‡πà‡∏≠‡∏ô set_page_config)
        try:
            st.set_page_config(page_title="OTOP Sales Dashboard", page_icon="üõçÔ∏è", layout="wide")
        except Exception:
            pass
        st.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ (‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á)")
        st.code(traceback.format_exc())
