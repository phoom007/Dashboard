# app.py
# -*- coding: utf-8 -*-
import streamlit as st
import traceback

# ============== Local modules ==============
from utils.theme import set_base_page_config, inject_global_css, get_plotly_template
from utils.data import load_all_data, load_geojson
from components.sidebar import render_sidebar
from components.kpi_card import render_kpis
from components.mapbox import render_thailand_map
from components.charts import (
    render_time_kind_controls,
    render_main_row_charts,
    render_revenue_sources,
    render_cdd_sources_embeds,
    render_regional_growth,
    render_product_category_performance,
)

# ============== App ==============
def main():
    # 0) Base config & CSS
    set_base_page_config()
    inject_global_css()  # ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≤‡∏ß, KPI 4 ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß, Night Mode ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ KPI

    # 1) Load data (‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ 6 ‡∏Ñ‡πà‡∏≤)
    _loaded = load_all_data()
    if not isinstance(_loaded, tuple) or len(_loaded) != 6:
        raise ValueError("load_all_data() ‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏ô 6 ‡∏Ñ‡πà‡∏≤: (df1, df2, df3, df1_melted, national_avg, month_cols)")
    df1, df2, df3, df1_melted, national_avg, month_cols = _loaded

    th_geo = load_geojson()

    # 2) Sidebar (‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ã‡πâ‡∏≤‡∏¢ / Night Mode ‡∏Ç‡∏ß‡∏≤ + ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    sidebar_state = render_sidebar(df1, df2, df3)
    selected_month     = sidebar_state["selected_month"]
    selected_province  = sidebar_state["selected_province"]
    channel_filter     = sidebar_state["channel_filter"]
    product_filter     = sidebar_state["product_filter"]

    # 3) Title + Caption (‡∏ï‡∏≤‡∏°‡∏™‡πÄ‡∏õ‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏™‡∏∏‡∏î)
    st.title("üõçÔ∏è Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ OTOP (‡∏ä‡∏∏‡∏î‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï)")
    st.divider()
    st.caption(
        f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô **{selected_month}** ‚Ä¢ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≤‡∏ó (‡∏ø) ‚Ä¢ "
        "‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: otop_r04, otop_r05, otop_r06 (‡∏î‡∏π‡∏ó‡πâ‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤)"
    )

    # 4) KPI (‡∏™‡∏µ‡πÄ‡∏î‡∏¥‡∏°/‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°/‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ 4 ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß, ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ)
    render_kpis(df1, df2, df3, selected_month)

    # 5) Global controls + Main charts (‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤)
    render_time_kind_controls(prefix="main")
    render_main_row_charts(
        df1=df1,
        df2=df2,
        selected_month=selected_month,
        month_cols=month_cols,                 # ‚úÖ ‡∏™‡πà‡∏á month_cols
        selected_province=selected_province,   # ‚úÖ ‡∏™‡πà‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        plotly_template=get_plotly_template(),
        key_prefix="main",
    )
    
    st.markdown("---")
    
    # 6) ‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏´‡∏°‡πà 2 ‡∏≠‡∏±‡∏ô (‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏î‡πâ‡∏ß‡∏¢)
    render_regional_growth(
        df1=df1,
        month_cols=month_cols,
        selected_month=selected_month,
        selected_province=selected_province,   # ‚úÖ ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        plotly_template=get_plotly_template(),
        key_prefix="below_main",
    )
    
    render_product_category_performance(
        df3=df3,
        selected_month=selected_month,
        selected_province=selected_province,   # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á ‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        plotly_template=get_plotly_template(),
        key_prefix="below_main",
    )
    st.markdown("---")

    # 7) Tabs ‚Äî ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏°‡∏µ Revenue Sources (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‡πÅ‡∏•‡∏∞ CDD Embeds
    tab1, tab2 = st.tabs(["üó∫Ô∏è ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", "üîé ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å"])

    with tab1:
        # Controls ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö (‡∏Å‡∏±‡∏ô‡∏ä‡∏ô key ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
        render_time_kind_controls(prefix="tab1")

        # Thailand Map (Mapbox ‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏•‡∏≠‡∏î)
        render_thailand_map(
            df1=df1,
            df1_melted=df1_melted,
            th_geojson=th_geo,
            selected_month=selected_month,
            key_prefix="tab1",
        )

        st.markdown("---")

        # Revenue Sources (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
        render_revenue_sources(
            df2=df2,
            selected_month=selected_month,
            plotly_template=get_plotly_template(),
            key_prefix="tab1",
        )

        st.markdown("---")

        # CDD embeds (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤ otop_r06/05/04) ‚Äî iframe ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà key
        render_cdd_sources_embeds(key_prefix="tab1")

    with tab2:
        # Controls ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö (‡∏Å‡∏±‡∏ô‡∏ä‡∏ô key ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
        render_time_kind_controls(prefix="tab2")

        # (‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏à‡∏≤‡∏∞‡∏•‡∏∂‡∏Å‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á)
        st.markdown("---")

        # Revenue Sources (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‚Äî ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡πÄ‡∏õ‡∏Å
        render_revenue_sources(
            df2=df2,
            selected_month=selected_month,
            plotly_template=get_plotly_template(),
            key_prefix="tab2",
        )

        st.markdown("---")

        # CDD embeds ‚Äî ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡πÄ‡∏õ‡∏Å
        render_cdd_sources_embeds(key_prefix="tab2")

    # 8) Footer: Data sources (‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô)
    st.markdown("---")
    st.markdown(
        "‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÉ‡∏ô‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î:  "
        "[otop_r04](https://logi.cdd.go.th/otop/cdd_report/otop_r04.php) ‚Ä¢ "
        "[otop_r05](https://logi.cdd.go.th/otop/cdd_report/otop_r05.php) ‚Ä¢ "
        "[otop_r06](https://logi.cdd.go.th/otop/cdd_report/otop_r06.php)"
    )


if __name__ == "__main__":
    try:
        main()
    except Exception:
        # ‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ error ‡∏Å‡πà‡∏≠‡∏ô set_page_config
        try:
            st.set_page_config(page_title="OTOP Sales Dashboard", page_icon="üõçÔ∏è", layout="wide")
        except Exception:
            pass
        st.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ (‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á)")
        st.code(traceback.format_exc())
