# app.py (р╣Ар╕Йр╕Юр╕▓р╕░р╕кр╣Ир╕зр╕Щр╕кр╕│р╕Др╕▒р╕Нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╣Бр╕Бр╣Й)
# -*- coding: utf-8 -*-
import streamlit as st
import traceback
from utils.theme import set_base_page_config, inject_global_css, get_plotly_template
from utils.data import load_all_data, load_geojson
from components.header import render_header
from components.sidebar import render_sidebar
from components.kpi_card import render_kpis
from components.charts import (
    render_main_row_charts,
    render_transactions_and_sources,
    render_revenue_sources,
    render_cdd_sources_embeds,
)
from components.mapbox import render_thailand_map

def main():
    set_base_page_config()
    inject_global_css()
    render_header()

    df1, df2, df3, df1_melted, national_avg, month_cols = load_all_data()
    th_geo = load_geojson()

    sidebar_state = render_sidebar(df1, df2, df3)
    selected_month = sidebar_state["selected_month"]
    selected_province = sidebar_state["selected_province"]
    channel_filter = sidebar_state["channel_filter"]
    product_filter = sidebar_state["product_filter"]

    st.title("ЁЯЫНя╕П Dashboard р╕кр╕гр╕╕р╕Ыр╕Ьр╕ер╕Бр╕▓р╕гр╕Ир╕│р╕лр╕Щр╣Ир╕▓р╕вр╕кр╕┤р╕Щр╕Др╣Йр╕▓ OTOP (р╕Кр╕╕р╕Фр╣Ар╕Хр╕┤р╕Ър╣Вр╕Х)")
    st.caption(
        f"р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ыр╕гр╕░р╕Ир╕│р╣Ар╕Фр╕╖р╕нр╕Щ **{selected_month}** тАв р╕лр╕Щр╣Ир╕зр╕вр╣Ар╕Ыр╣Зр╕Щр╕Ър╕▓р╕Ч (р╕┐) тАв р╣Бр╕лр╕ер╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е: "
        "otop_r04, otop_r05, otop_r06 (р╕Фр╕╣р╕Чр╣Йр╕▓р╕вр╕лр╕Щр╣Йр╕▓)"
    )

    render_kpis(df1, df2, df3, selected_month)

    st.markdown("")  # р╣Ар╕зр╣Йр╕Щр╕Ър╕гр╕гр╕Чр╕▒р╕Ф
    render_main_row_charts(df1, df2, selected_month, plotly_template=get_plotly_template())
    st.markdown("---")

    tab1, tab2 = st.tabs(["ЁЯЧ║я╕П р╕ар╕▓р╕Юр╕гр╕зр╕бр╕гр╕▓р╕вр╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф", "ЁЯФО р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╣Ар╕Кр╕┤р╕Зр╕ер╕╢р╕Б"])

    with tab1:
        render_thailand_map(df1, df1_melted, th_geo, selected_month)
        st.markdown("---")
        # >>> р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕нр╕Зр╕кр╣Ир╕зр╕Щр╣Гр╕Щр╣Бр╕Чр╣Зр╕Ър╕Щр╕╡р╣Й <<<
        render_revenue_sources(df2, selected_month, plotly_template=get_plotly_template())
        st.markdown("---")
        render_cdd_sources_embeds()

    with tab2:
        render_transactions_and_sources(
            df1, df2, df3, selected_month, selected_province,
            channel_filter, product_filter, national_avg,
            plotly_template=get_plotly_template()
        )
        # (р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Щр╕╡р╣Йр╕Хр╕нр╕Щр╕Чр╣Йр╕▓р╕вр╕Ьр╕бр╣Гр╕кр╣Ир╕кр╕нр╕Зр╕кр╣Ир╕зр╕Щр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕з
        #  р╣Бр╕Хр╣Ир╕Цр╣Йр╕▓р╕Др╕╕р╕Ур╕нр╕вр╕▓р╕Бр╣Ар╕гр╕╡р╕вр╕Бр╕Лр╣Йр╕│р╕Чр╕╡р╣Ир╕Щр╕╡р╣Ир╕нр╕╡р╕Бр╕Бр╣Зр╣Др╕Фр╣Й р╣Др╕бр╣Ир╕бр╕╡р╕Ьр╕ер╕Вр╣Йр╕▓р╕Зр╣Ар╕Др╕╡р╕вр╕З)

if __name__ == "__main__":
    try:
        main()
    except Exception:
        st.set_page_config(page_title="OTOP Sales Dashboard", page_icon="ЁЯЫНя╕П", layout="wide")
        st.error("р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╣Бр╕нр╕Ы (р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕Фр╣Йр╕▓р╕Щр╕ер╣Ир╕▓р╕З)")
        st.code(traceback.format_exc())
